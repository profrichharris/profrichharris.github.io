require(tidyverse)
setwd("C:/Users/profr/Dropbox/github/MandM/working")
wards <- st_read("mdb_wards_2016.shp")
read_csv("table_2022-07-25_13-05-36.csv", skip = 9, col_select = 2:4, n_max = 65880) %>%
separate(1, into = c("WardID", "WardNumber"), sep = " : ") %>%
pivot_wider(names_from = `Income category`, values_from = "Count") %>%
mutate(Total = Total - `Not applicable` - Unspecified) %>%
mutate(No_income = round(`No income` / Total * 100, 2),
High_income = round((`R2457601 or more` + `R 1228801 - R 2457600` + `R 614401- R 1228800`) / Total * 100, 2),
Lower_income = round((`R 1 - R 4800` + `R 4801 - R 9600` + `R 9601 - R 19200`) / Total * 100, 2)) %>%
select(WardID, No_income, Lower_income, High_income) %>%
inner_join(wards, ., by = "WardID") %>%
st_simplify(dTolerance = 50, preserveTopology = TRUE) ->
wards
read_csv("table_2022-07-28_11-11-40.csv", skip = 11, col_names = FALSE,
col_select = 1:8, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
rename(Employed = 3, Unemployed = 4, Unspecified = 7, Not_applicable = 8,
Total = 9) %>%
mutate(Total = Total - Unspecified - Not_applicable) %>%
mutate(across(contains("ployed"), ~ round(. / Total * 100, 2))) %>%
select(WardID, Employed, Unemployed) %>%
left_join(wards, ., by = "WardID") -> wards
wards
summary(wards$Lower_income)
plot(wards$Lower_income, wards$Employed)
plot(wards$Lower_income ~ wards$Employed)
read_csv("table_2022-07-28_12-04-23.csv", skip = 11, col_names = FALSE,
col_select = 1:10, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
read_csv("table_2022-07-28_12-04-23.csv", skip = 11, col_names = FALSE,
col_select = 1:10, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ")
read_csv("table_2022-07-28_12-04-23.csv", skip = 11, col_names = FALSE,
col_select = 1:10, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
rename(No_schooling = 3, Higher_edu = 8,
Unspecified = 8, Not_applicable = 9, Total = 10) %>%
mutate(Total = Total - Unspecified - Not_applicable)
read_csv("table_2022-07-28_12-04-23.csv", skip = 11, col_names = FALSE,
col_select = 1:10, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
rename(No_schooling = 3, Higher_edu = 8,
Unspecified = 9, Not_applicable = 10, Total = 11) %>%
mutate(Total = Total - Unspecified - Not_applicable)
read_csv("table_2022-07-28_12-04-23.csv", skip = 11, col_names = FALSE,
col_select = 1:10, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
rename(No_schooling = 3, Higher_edu = 8,
Unspecified = 9, Not_applicable = 10, Total = 11) %>%
mutate(Total = Total - Unspecified - Not_applicable) %>%
select(WardID, No_schooling, Higher_edu, Total) %>%
mutate(across(where(is.numeric), ~ . / Total))
read_csv("table_2022-07-28_12-04-23.csv", skip = 11, col_names = FALSE,
col_select = 1:10, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
rename(No_schooling = 3, Higher_edu = 8,
Unspecified = 9, Not_applicable = 10, Total = 11) %>%
mutate(Total = Total - Unspecified - Not_applicable) %>%
select(WardID, No_schooling, Higher_edu, Total) %>%
mutate(across(where(is.numeric), ~ round(. / Total * 100, 2))) %>%
select(-Total)
read_csv("table_2022-07-28_12-04-23.csv", skip = 11, col_names = FALSE,
col_select = 1:10, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
rename(No_schooling = 3, Higher_edu = 8,
Unspecified = 9, Not_applicable = 10, Total = 11) %>%
mutate(Total = Total - Unspecified - Not_applicable) %>%
select(WardID, No_schooling, Higher_edu, Total) %>%
mutate(across(where(is.numeric), ~ round(. / Total * 100, 2))) %>%
select(-Total) %>%
left_join(wards, ., by = "WardID") -> wards
wards
read_csv("table_2022-07-28_12-16-50.csv", skip = 11, col_names = FALSE,
col_select = 1:8, n_max = 4277) %>%
read_csv("table_2022-07-28_12-16-50.csv", skip = 11, col_names = FALSE,
col_select = 1:8, n_max = 4277)
read_csv("table_2022-07-28_12-16-50.csv", skip = 11, col_names = FALSE,
col_select = 1:8, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
select(-WardNumber)
read_csv("table_2022-07-28_12-16-50.csv", skip = 11, col_names = FALSE,
col_select = 1:8, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
select(-WardNumber) %>%
rename(Black_African = 2, Coloured = 3, Indian_Asian = 4,
White = 5, Other = 6, Unspecified = 7, Total = 8)
read_csv("table_2022-07-28_12-16-50.csv", skip = 11, col_names = FALSE,
col_select = 1:8, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
select(-WardNumber) %>%
rename(Black_African = 2, Coloured = 3, Indian_Asian = 4,
White = 5, Other = 6, Unspecified = 7, Total = 8) %>%
mutate(Total = Total - Unspecified) %>%
mutate(across(where(is.numeric), ~ round(. / Total * 100, 2)))
read_csv("table_2022-07-28_12-16-50.csv", skip = 11, col_names = FALSE,
col_select = 1:8, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
select(-WardNumber) %>%
rename(Black_African = 2, Coloured = 3, Indian_Asian = 4,
White = 5, Other = 6, Unspecified = 7, Total = 8) %>%
mutate(Total = Total - Unspecified) %>%
mutate(across(where(is.numeric), ~ round(. / Total * 100, 2))) %>%
select(-Unspecified, - Total)
read_csv("table_2022-07-28_12-16-50.csv", skip = 11, col_names = FALSE,
col_select = 1:8, n_max = 4277) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
select(-WardNumber) %>%
rename(Black_African = 2, Coloured = 3, Indian_Asian = 4,
White = 5, Other = 6, Unspecified = 7, Total = 8) %>%
mutate(Total = Total - Unspecified) %>%
mutate(across(where(is.numeric), ~ round(. / Total * 100, 2))) %>%
select(-Unspecified, - Total) %>%
left_join(wards, ., by = "WardID") -> wards
wards
read_csv("table_2022-07-28_12-27-16.csv", skip = 11, col_names = FALSE,
n_max = 4277)
read_csv("table_2022-07-28_12-27-16.csv", skip = 11, col_names = FALSE,
n_max = 4277) -> df
df
age <- vector(mode = "numeric", length(nrow(df)))
age
?vector
age <- vector(mode = "numeric", length = nrow(df))
age
ncol(df)
i <- 1
j <- 2
df[i,j]
df[i,j] * 2
read_csv("table_2022-07-28_12-27-16.csv", skip = 11, col_names = FALSE,
n_max = 4277) -> df
age <- vector(mode = "numeric", length = nrow(df))
for(i in 1: nrow(df)) {
for(j in 2: ncol(df)) {
age[i] <- age[i] + (j - 0.5) * df[i, j]
}
}
age
head(age)
df[i, j] %>% pull
head(df)
ncol(df)
df[,125]
df[,124]
ncol(df) - 3
read_csv("table_2022-07-28_12-27-16.csv", skip = 11, col_names = FALSE,
n_max = 4277) -> df
age <- vector(mode = "numeric", length = nrow(df))
for(i in 1: nrow(df)) {
for(j in 2: (ncol(df)-3)) {
age[i] <- age[i] + (j - 0.5) * df[i, j] %>% pull
}
}
age
df[i, 124] - df[i, 123]
df[i, 124] - df[i, 123] %>% pull
(df[i, 124] - df[i, 123] %>% pull)
read_csv("table_2022-07-28_12-27-16.csv", skip = 11, col_names = FALSE,
n_max = 4277) -> df
age <- vector(mode = "numeric", length = nrow(df))
count <- 0
for(i in 1: nrow(df)) {
count <- count + 1
if(count == 100) {
count <- 0
cat("\n", i)
}
for(j in 2: (ncol(df)-3)) {
age[i] <- age[i] + (j - 0.5) * df[i, j] %>% pull
}
age[i] <- age[i] / (df[i, 124] - df[i, 123] %>% pull)
}
read_csv("table_2022-07-28_12-27-16.csv", skip = 11, col_names = FALSE,
n_max = 4277) -> df
age <- vector(mode = "numeric", length = nrow(df))
count <- 0
for(i in 1: nrow(df)) {
count <- count + 1
if(count == 100) {
count <- 0
cat("\n", i)
}
for(j in 2: (ncol(df)-3)) {
age[i] <- age[i] + (j - 0.5) * df[i, j] %>% pull
}
#  age[i] <- age[i] / (df[i, 124] - df[i, 123] %>% pull)
}
head(age)
df
df %>%
select(1, 123, 124)
df %>%
select(1, 123, 124) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ")
df %>%
select(1, 123, 124) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
rename(Unspecified = 3, Total = 4)
df %>%
select(1, 123, 124) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
rename(Unspecified = 3, Total = 4) %>%
mutate(Total = Total - Unspecified) %>%
select(-WardNumber, -Unspecified) -> df
df
df$age <- age
df
df %>%
mutate(age = age / Total)
df %>%
mutate(age = age / Total) %>%
select(-Total) -> df
df
read_csv("table_2022-07-28_12-27-16.csv", skip = 11, col_names = FALSE,
n_max = 4277) -> df
df %>%
select(1, 123, 124) %>%
separate(1, into = c("WardID", "WardNumber"), sep = ": ") %>%
rename(Unspecified = 3, Total = 4) %>%
mutate(Total = Total - Unspecified) %>%
select(-WardNumber, -Unspecified) -> df
df$age <- age
df
df %>%
mutate(age = age / Total) %>%
select(-Total) %>%
left_join(wards, ., by = "WardID") -> wards
wards
wards %>%
mutate(age = round(age, 1)) -> wards
wards
summary(wards$age)
which.min(is.na(wards$age))
wards[1,]
which(is.na(wards$age))
wards[81,]
wards
summary(wards$age)
setwd("C:/Users/profr/Dropbox/github/MandM/working")
summary(wards$Indian_Asian)
save(wards, file = "wards.RData")
installed <- installed.packages()[,1]
if(!("tidyverse" %in% installed)) install.packages("tidyverse", dependencies = TRUE)
if(!("sf" %in% installed)) install.packages("sf", dependencies = TRUE)
if(!("RColorBrewer" %in% installed)) install.packages("RColorBrewer", dependencies = TRUE)
if(!("classInt" %in% installed)) install.packages("classInt", dependencies = TRUE)
if(!("ggplot2" %in% installed)) install.packages("tidyverse", dependencies = TRUE)
require(tidyverse)
require(sf)
require(RColorBrewer)
require(classInt)
require(ggplot2)
if(!file.exists("municipal.RData")) download.file("https://github.com/profrichharris/profrichharris.github.io/blob/main/MandM/workspaces/municipal.RData?raw=true", "municipal.RData", mode = "wb")
load("municipal.RData")
brks <- classIntervals(municipal$No_schooling, n = 7, style = "jenks")$brks
municipal$No_schooling_gp <- cut(municipal$No_schooling, brks, include.lowest = TRUE)
ggplot(data = municipal, aes(fill = No_schooling_gp)) +
geom_sf() +
scale_fill_brewer("%", palette = "RdYlBu", direction = -1) +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
guides(fill = guide_legend(reverse = TRUE)) +
labs(
title = "Percentage of Population with No Schooling",
subtitle = "2011 South African Census Data",
caption = "Source: Statistics South Africa"
)
if(!("spdep" %in% installed)) install.packages("tidyverse", dependencies = TRUE)
require(spdep)
municipal %>%
slice(-128) ->
municipal
neighbours <- poly2nb(municipal)
summary(neighbours)
neighbours[[69]]
#| eval: false
write.nb.gal(neighbours, "neighbours.gal")
coords <- st_centroid(municipal, of_largest_polygon = TRUE)
pts <- st_coordinates(coords)
par(mai = c(0, 0, 0, 0))  # Remove the margins and white space around the plot
plot(st_geometry(municipal), border = "grey")
plot(neighbours, pts, add = T)
spweight <- nb2listw(neighbours)
# Here are the neighbours of and weights for the first region:
spweight$neighbours[[1]]
spweight$weights[[1]]
moran <- moran.test(municipal$No_schooling, spweight)
moran
z <- c(-1.96, 1.96)
round(moran$estimate[1]  + z * sqrt(moran$estimate[3]), 3)
moran.plot(municipal$No_schooling, spweight)
localm <- localmoran(municipal$No_schooling, spweight)
names(attributes(localm))
quadr <- attr(localm, "quadr")
head(quadr)
ggplot(data = municipal, aes(fill = quadr$pysal)) +
geom_sf() +
scale_fill_discrete("", type = c("blue", "orange", "purple", "red")) +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
guides(fill = guide_legend(reverse = TRUE)) +
labs(
title = "Local Moran value groups",
subtitle = "Percentage of Population with No Schooling"
)
head(localm, n = 3)   # The p-values are in column 5
quadr[localm[,5] > 0.05, ] <- NA
ggplot(data = municipal, aes(fill = quadr$pysal)) +
geom_sf() +
scale_fill_discrete("", type = c("blue", "orange", "purple", "red"), na.value = "grey80") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
guides(fill = guide_legend(reverse = TRUE)) +
labs(
title = "Statistically significant local Moran value groups",
subtitle = "Percentage of Population with No Schooling"
)
quadr[p.adjust(localm[,5], method = "fdr") > 0.05, ] <- NA
ggplot(data = municipal, aes(fill = quadr$pysal)) +
geom_sf() +
scale_fill_discrete("", type = c("blue", "red"), na.value = "grey80") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
guides(fill = guide_legend(reverse = TRUE)) +
labs(
title = "Statistically significant (p-adjusted) local Moran value groups",
subtitle = "Percentage of Population with No Schooling"
)
neighbours <- nblag(neighbours, maxlag = 2)
par(mai = c(0, 0, 1, 0))
par(mfrow = c(1,2))   # Plot graphics in a 1 row by 2 column grid
plot(st_geometry(municipal), border = "grey", main = "First order contiguity")
plot(neighbours[[1]], pts, add = T)
plot(st_geometry(municipal), border = "grey", main = "Second order contiguity")
plot(neighbours[[2]], pts, add = T)
sapply(neighbours, \(x) {
nb2listw(x) %>%
moran.test(municipal$No_schooling, .) ->
moran
moran$estimate[1]
})
par(mai = c(0, 0, 1, 0))
par(mfrow = c(1,2))
neighbours <- knn2nb(knearneigh(coords, k = 5))
plot(st_geometry(municipal), border = "grey", main = "Five nearest neighbours")
plot(neighbours, pts, add = T)
neighbours <- knn2nb(knearneigh(coords, k = 10))
plot(st_geometry(municipal), border = "grey", main = "Ten nearest neighbours")
plot(neighbours, pts, add = T)
n <- nrow(municipal)
y <- sapply(1: (n-1), \(k) {
knearneigh(coords, k) %>%
knn2nb %>%
nb2listw %>%
moran.test(municipal$No_schooling, .) ->
moran
moran$estimate[1]
})
ggplot(data.frame(k = 1:(n-1), y = y), aes(x = k, y = y)) +
geom_line() +
ylab("Moran statistic")
spweight <- nb2listw(knn2nb(knearneigh(coords, 30)))
pearson <- cor(lag.listw(spweight, municipal$No_schooling), municipal$No_schooling)
moran <- moran.test(municipal$No_schooling, spweight)$estimate[1]
data.frame(person = pearson, moran = moran, row.names = "correlation")
listw2mat(spweight) %>%
range(eigen((. + t(.)) / 2))
n <- length(municipal$No_schooling)
sapply(1:1000, \(x) {
sample(municipal$No_schooling, n) %>%
cor(lag.listw(spweight, .))
}) %>%
quantile(prob = c(0.025, 0.975))
download.file("https://github.com/profrichharris/profrichharris.github.io/blob/main/MandM/workspaces/wards.RData?raw=true", "wards.RData", mode = "wb", quiet = TRUE)
load("wards.RData")
ggplot(data = wards, aes(fill = High_income)) +
geom_sf(colour = "transparent") +
scale_fill_distiller("%", guide = "colourbar", direction = 1, trans = "sqrt",
palette = "Reds") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank()) +
labs(
title = "Percentage of Population with income R614401 or greater",
subtitle = "2011 South African Census Data",
caption = "Source: Statistics South Africa"
)
ls()
download.file("https://github.com/profrichharris/profrichharris.github.io/blob/main/MandM/workspaces/wards.RData?raw=true", "wards.RData", mode = "wb", quiet = TRUE)
load("wards.RData")
wards
if(!("sf" %in% installed)) install.packages("sf", dependencies = TRUE)
require(sf)
if(!("GWmodel" %in% installed)) install.packages("GWmodel", dependencies = TRUE)
require(GWmodel)
if(!file.exists("wards.RData")) {
download.file("https://github.com/profrichharris/profrichharris.github.io/blob/main/MandM/workspaces/wards.RData?raw=true", "wards.RData", mode = "wb", quiet = TRUE)
}
load("wards.RData")
wards %>%
filter(ProvinceNa == "Western Cape") ->
wards
coords <- st_coordinates(st_centroid(wards, of_largest_polygon = TRUE))
wards_sp <- as_Spatial(wards)
dmatrix <- gw.dist(coords, longlat = T)
gwstats <- gwss(wards_sp , vars = "High_income", bw = 10, kernel = "bisquare",
adaptive = TRUE, dMat = dmatrix, longlat = T)
wards$bw10 <- gwstats$SDF$High_income_LM
gwstats <- gwss(wards_sp , vars = "High_income", bw = 100, kernel = "bisquare",
adaptive = TRUE, dMat = dmatrix, longlat = T)
wards$bw100 <- gwstats$SDF$High_income_LM
wards2 <- pivot_longer(wards, cols = starts_with("bw"), names_to = "bw",
values_to = "GWmean")
tmap_mode("view")
tm_basemap("OpenStreetMap") +
tm_shape(wards2, names = "wards") +
tm_fill("GWmean", palette = "Reds", title = "%",
alpha = 0.7,
id = "District_1",
popup.vars = c("GW mean:" = "GWmean",
"Ward ID:" = "WardID"),
popup.format = list(digits = 1)) +
tm_borders() +
tm_facets(by = "bw") +
tm_legend(title = "Geographically weighted % population with income R614401 or greater")
wards_sp
gridded
wards %>%
st_rasterize(nx = 100, ny = 100) %>%
st_as_sf ->
gridded
grodded
gridded
wards_sp
wards %>%
filter(is.na(age))
wards %>%
filter(is.na(age)) %>%
as_Spatial ->
missing_ages
names(wards)
bw.gwr(age ~ 1, data = wards_sp,
adaptive = TRUE, kernel = "bisquare", longlat = T)
ls()
names(wards_sp)
bw <- bw.gwr(Coloured ~ 1, data = wards_sp,
adaptive = TRUE, kernel = "bisquare", longlat = T)
bw <- bw.gwr(High_income ~ 1, data = wards_sp,
adaptive = TRUE, kernel = "bisquare", longlat = T)
bw <- bw.gwr(age ~ 1, data = has_ages,
adaptive = TRUE, kernel = "bisquare", longlat = T)
wards %>%
filter(!is.na(age)) %>%
as_Spatial ->
has_ages
bw <- bw.gwr(age ~ 1, data = has_ages,
adaptive = TRUE, kernel = "bisquare", longlat = T)
gwstats <- gwss(wards_sp, missing_ages, vars = "age", bw = bw, kernel = "bisquare",
adaptive = TRUE, longlat = T)
gwstats$SDF
gwstats <- gwss(has_ages, missing_ages, vars = "age", bw = bw, kernel = "bisquare",
adaptive = TRUE, longlat = T)
gwstats$SDF
plot(missing_ages)
plot(has_ages)
plot(has_ages)
plot(missing_ages, bg = "red", add = T)
plot(missing_ages, col = "red", add = T)
gwstats$SDF$age_LM
head(wards@data)
head(missing_ages@data)
?rows_update
data.frame(WardID = missing_ages$WardID, age = gwstats$SDF$age_LM)
data.frame(WardID = missing_ages$WardID, age = round(gwstats$SDF$age_LM), 1)
data.frame(WardID = missing_ages$WardID, age = round(gwstats$SDF$age_LM, 1))
interpolated <- data.frame(WardID = missing_ages$WardID, age = round(gwstats$SDF$age_LM, 1))
rows_update(wards, interpolated, by = "WardID")
rows_update(wards, interpolated, by = c("WardID", "WardID"))
names(missing_ages)
names(wards)
interpolated <- data.frame(OBJECTID = missing_ages$OBJECTID, age = round(gwstats$SDF$age_LM, 1))
rows_update(wards, interpolated, by = "OBJECTID")
names(Wards)
names(wards)
data <- tibble(a = 1:3, b = letters[c(1:2, NA)], c = 0.5 + 0:2)
data
rows_update(data, tibble(a = 2:3, b = "z"))
match(missing_ages$OBJECTID, wards$OBJECTID)
rows_update(wards, tibble(OBJECTID = missing_ages$OBJECTID, ages = 100)
)
names(wards)
tibble(OBJECTID = missing_ages$OBJECTID, ages = 100)
wards$OBJECTID
wards
rows_update(wards, tibble(WardID = missing_ages$WardID, ages = 100)
)
names(Wards)
names(wards)
rows_update(wards, tibble(WardID = missing_ages$WardID, age = 100)
)
missing_ages$OBJECTID
missing_ages$WardID
match(missing_ages$WardID, wards$WardID)
rows_update(wards, tibble(WardID = missing_ages$WardID, age = 100)
)
rows_update(wards %>% select(WardID, age), tibble(WardID = missing_ages$WardID, age = 100))
mch <- match(missing_ages$WardID, wards$WardID)
mch
summary(wards$age)
mch <- match(missing_ages$WardID, wards$WardID)
wards$age[mch] <- gwstats$SDF$age_LM
summary(wards$age)
