bw <- bw.ggwr(NCases ~ 1 + offset(log(NPersons)),  data = ldn_covid_sp, family = "poisson", adaptive = TRUE)
dMat <- gw.dist(st_coordinates(st_centroid(st_geometry(ldn_covid))))
bw <- bw.ggwr(NCases ~ 1 + offset(log(NPersons)),  data = ldn_covid_sp, family = "poisson", adaptive = TRUE,
dMat = dMat)
ggwrmod <- ggwr.basic(NCases ~ 1 + offset(log(NPersons)), data = ldn_covid_sp, bw = 300, family = "poisson", adaptive = TRUE)
ggwrmod$SDF
ldn_covid$log.rate <- ggwrmod$SDF$Intercept
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
theme_void()
exp(5.1)
exp(5.4)
require(lme4)
names(ldn_covid)
mlm <- glmer(NCases ~ (1|MSOA11CD) + offset(log(NPersons)), data = ldn_covid_sp)
mlm <- glmer(NCases ~ (1|MSOA11CD) + offset(log(NPersons)), data = ldn_covid_sp, family = "poisson")
mlm <- glmer(NCases ~ (1|MSOA11CD) + offset(log(NPersons)), data = ldn_covid_sp, family = poisson())
?glmer
mlm <- glmer(NCases ~ (1|MSOA11CD) + offset(log(NPersons)), data = ldn_covid, family = poisson())
summary(mlm)
?ranef
ranef(mlm, whichel = "MSOA11CD") %>%
as_tibble()
?predict
predict(mlm, re.form = "MSOA11CD")
class(mlm)
predict(mlm, re.form = NULL)
predict(mlm, re.form = ~ (1|MSOA11CD))
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
theme_void()
ldn_covid$log.rate <- predict(mlm, re.form = ~ (1|MSOA11CD))
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
theme_void()
names(ldn_covid)
ldn_covid$log.rate <- log(ldn_covid$NCases / ldn_covid$NPersons)
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
theme_void()
ldn_covid$log.rate <- ldn_covid$NCases / ldn_covid$NPersons
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
theme_void()
ldn_covid$log.rate <- ldn_covid$NCases / ldn_covid$NPersons * 1000
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
theme_void()
exp(5)
require(lme4)
mlm <- glmer(NCases ~ (1|MSOA11CD) + offset(log(NPersons)), data = ldn_covid, family = poisson())
ranef(mlm, whichel = "MSOA11CD") %>%
as_tibble()
ldn_covid$log.rate <- exp(predict(mlm, re.form = ~ (1|MSOA11CD)))
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
theme_void()
ldn_covid
summary(ldn_covid$NCases)
summary(ldn_covid$NPersons)
sum(ldn_covid$NCases) / sum(ldn_covid$NPersons)
sum(ldn_covid$NCases) / sum(ldn_covid$NPersons) * 100
require(tidyverse)
require(sf)
try(setwd("C:/Users/profr/Dropbox/Geography and A Geographer/Draft Chapters/Section 3 Urban and Social Geography/Chapter 10 - Harris & QuSS/Analysis/Data/"), silent = TRUE)
try(setwd("~/Dropbox/Geography and A Geographer/Draft Chapters/Section 3 Urban and Social Geography/Chapter 10 - Harris & QuSS/Analysis/Data/"), silent = TRUE)
read_csv("covid_data.csv") %>%
filter(regionName == "London") %>%
select(starts_with("2020-"), starts_with("2021-"), starts_with("2022-")) %>%
pivot_longer(everything(), values_to = "NCases", names_to = "date") %>%
group_by(date) %>%
summarise(NCases = sum(NCases)) %>%
slice_max(NCases) %>%
select(date)
require(tidyverse)
require(sf)
try(setwd("C:/Users/profr/Dropbox/Geography and A Geographer/Draft Chapters/Section 3 Urban and Social Geography/Chapter 10 - Harris & QuSS/Analysis/Data/"), silent = TRUE)
try(setwd("~/Dropbox/Geography and A Geographer/Draft Chapters/Section 3 Urban and Social Geography/Chapter 10 - Harris & QuSS/Analysis/Data/"), silent = TRUE)
read_csv("covid_data.csv") %>%
filter(regionName == "London") %>%
select(starts_with("2020-"), starts_with("2021-"), starts_with("2022-")) %>%
pivot_longer(everything(), values_to = "NCases", names_to = "date") %>%
group_by(date) %>%
summarise(NCases = sum(NCases))
require(tidyverse)
require(sf)
try(setwd("C:/Users/profr/Dropbox/Geography and A Geographer/Draft Chapters/Section 3 Urban and Social Geography/Chapter 10 - Harris & QuSS/Analysis/Data/"), silent = TRUE)
try(setwd("~/Dropbox/Geography and A Geographer/Draft Chapters/Section 3 Urban and Social Geography/Chapter 10 - Harris & QuSS/Analysis/Data/"), silent = TRUE)
read_csv("covid_data.csv") %>%
filter(regionName == "London") %>%
select(starts_with("2020-"), starts_with("2021-"), starts_with("2022-")) %>%
pivot_longer(everything(), values_to = "NCases", names_to = "date") %>%
group_by(date) %>%
summarise(NCases = sum(NCases)) %>%
slice_max(NCases) %>%
arrange(desc(NCases))
187647 / 10000000
ldn_covid$log.rate <- ldn_covid$NCases / ldn_covid$NPersons * 1000
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
theme_void()
---
title: "Multilevel models"
ldn_covid$log.rate <- ldn_covid$NCases / ldn_covid$NPersons * 100
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
theme_void()
ldn_covid$log.rate <- ldn_covid$NCases / ldn_covid$NPersons * 100
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller()
theme_void()
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller()
ldn_covid$log.rate <- ldn_covid$NCases / ldn_covid$NPersons * 100
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "Reds", direction = 1)
ldn_covid$log.rate <- ldn_covid$NCases / ldn_covid$NPersons * 100
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
require(lme4)
mlm <- glmer(NCases ~ (1|MSOA11CD) + offset(log(NPersons)), data = ldn_covid, family = poisson())
ranef(mlm, whichel = "MSOA11CD") %>%
as_tibble()
ldn_covid$log.rate <- exp(predict(mlm, re.form = ~ (1|MSOA11CD)))
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
ldn_covid$log.rate <- predict(mlm, re.form = ~ (1|MSOA11CD))
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
ldn_covid$log.rate <- ggwrmod$SDF$Intercept
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
?predict
?lmer
names(ldn_covid)
require(lme4)
mlm <- glmer(NCases ~ (1|MSOA11CD) + (1|LtlaCode) + offset(log(NPersons)), data = ldn_covid,
family = poisson())
ldn_covid$log.rate <- predict(mlm, re.form = NULL)
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
ldn_covid$log.rate <- ldn_covid$NCases / ldn_covid$NPersons * 100
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
summary(mlm)
ranef(mlm, whichel = "LtlaCode") %>% as_tibble()
names(ldn_covid)
mlm <- glmer(NCases ~ (1|MSOA11CD) + (1|LtlaName) + offset(log(NPersons)), data = ldn_covid,
family = poisson())
ranef(mlm, whichel = "LtlaName") %>% as_tibble()
ranef(mlm, whichel = "LtlaName") %>% as_tibble() %>% arrange(desc(grp))
ldn_covid$log.rate <- ldn_covid$NCases
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
ldn_covid$log.rate <- ldn_covid$NCases / ldn_covid$NPersons
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
ggwrmod <- ggwr.basic(NCases ~ 1 + offset(log(NPersons)), data = ldn_covid_sp, bw = bw, family = "poisson", adaptive = TRUE)
ldn_covid$log.rate <- ggwrmod$SDF$Intercept
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
require(lme4)
mlm <- glmer(NCases ~ (1|MSOA11CD) + (1|LtlaName) + offset(log(NPersons)), data = ldn_covid,
family = poisson())
ldn_covid$log.rate <- predict(mlm, re.form = NULL)
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
ldn_covid$log.rate <- predict(mlm, re.form = ~ (1|MSOA11CD))
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
ldn_covid$log.rate <- predict(mlm, re.form = NULL)
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
AIC(mlm)
AIC(ggwrmod)
ggwrmod
cor(ldn_covid$log.rate, ldn_covid$NCases
)
cor(ldn_covid$log.rate, ldn_covid$NCases/ldn_covid$NPersons)
cor(ldn_covid$log.rate, ldn_covid$NCases/ldn_covid$NPersons)^2
ldn_covid$log.rate <- predict(mlm, re.form = ~ (1|LtlaName))
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
ldn_covid$log.rate <- ldn_covid$NCases
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
require(lme4)
mlm <- glmer(NCases ~ (1|MSOA11CD) + (1|LtlaName), offset = log(NPersons), data = ldn_covid,
family = poisson())
ldn_covid$log.rate <- predict(mlm, re.form = ~ (1|MSOA11CD))
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
exp(6.5)
ldn_covid$log.rate <- exp(predict(mlm, re.form = ~ (1|MSOA11CD)))
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
ldn_covid$log.rate <- exp(ggwrmod$SDF$Intercept)
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
summary(ggwrmod$SDF)
ldn_covid$log.rate <- ggwrmod$SDF$yhat
ggplot(data = ldn_covid, aes(fill = log.rate)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1)
#| include: false
installed <- installed.packages()[,1]
required <- c("remotes", "sf", "tidyverse", "ggplot2", "GWmodel", "car", "broom",
"spatialreg", "RANN", "gridExtra")
install <- required[!(required %in% installed)]
if(length(install)) install.packages(install, dependencies = TRUE, repos = "https://cloud.r-project.org")
if(!("remotes" %in% installed.packages()[,1])) install.packages("remotes", dependencies = TRUE)
if(!("ggsflabel" %in% installed.packages()[,1])) remotes::install_github("yutannihilation/ggsflabel")
require(sf)
require(tidyverse)
require(ggplot2)
require(ggsflabel)
if(!file.exists("covid.geojson")) download.file("https://github.com/profrichharris/profrichharris.github.io/raw/main/MandM/data/covid.geojson",
"covid.geojson", mode = "wb", quiet = TRUE)
read_sf("covid.geojson") %>%
filter(regionName == "North West") ->
covid
covid %>%
filter(Rate > 400) %>%
select(LtlaName) %>%   # LtlaName is the name of the local authority
filter(!duplicated(LtlaName)) ->
high_rate
ggplot() +
geom_sf(data = covid, aes(fill = Rate), size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1) +
geom_sf_label_repel(data = high_rate, aes(label = LtlaName), size = 3, alpha = 0.5) +
theme_void()
ggplot(data = covid %>% filter(LtlaName == "Manchester")) +
geom_sf(aes(fill = Rate), size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1) +
theme_void()
require(spdep)
spweight <- nb2listw(poly2nb(covid, snap = 1))
moran.test(covid$Rate, spweight)
cor(lag.listw(spweight, covid$Rate), covid$Rate)
#| results: false
require(GWmodel)
covid_sp <- as_Spatial(covid)
bw <- bw.gwr(Rate ~ 1, data = covid_sp,
adaptive = TRUE, kernel = "bisquare", longlat = F)
gwstats <- gwss(covid_sp, vars = "Rate", bw = bw, kernel = "bisquare",
adaptive = TRUE, longlat = F)
covid$Rate_LM <- gwstats$SDF$Rate_LM
ggplot(covid, aes(fill = Rate_LM)) +
geom_sf(size = 0.25) +
scale_fill_distiller(palette = "YlOrRd", direction = 1) +
theme_void()
coords <- st_centroid(covid, of_largest_polygon = TRUE)
neighbours <- dnearneigh(coords, 0, 5000)
spweightB <- nb2listw(neighbours, style = "B", zero.policy = TRUE)
covid$localG <- localG(covid$Rate, spweightB)
brks <- c(min(covid$localG, na.rm = TRUE), -3.29, -2.58, -1.96, 1.96, 2.58, 3.29,
max(covid$localG, na.rm = TRUE))
covid$localG_gp <- cut(covid$localG, brks, include.lowest = TRUE)
pal <- c("purple", "dark blue", "light blue", "light grey", "yellow", "orange", "red")
ggplot(covid, aes(fill = localG_gp)) +
geom_sf(size = 0.25) +
scale_fill_manual("G", values = pal, na.value = "white",
na.translate = F) +
theme_void() +
guides(fill = guide_legend(reverse = TRUE))
ols1 <- lm(Rate ~ IMD + age0.11 + age12.17 + age18.24 + age25.34 + age35.39 +
age50.59 + age60.69 + age70plus + density +
carebeds + AandE, data = covid)
summary(ols1)
par(mfrow = c(2,2))
plot(ols1)
if(!("car" %in% installed.packages()[,1])) install.packages("car")
require(car)
vif(ols1)
#| results: false
ols2 <- step(ols1)
summary(ols2)
vif(ols2)
lm.morantest(ols2, spweight)
covid$resids <- rstandard(ols2)
brks <- c(min(covid$resids, na.rm = TRUE), -3.29, -2.58, -1.96, 1.96, 2.58, 3.29,
max(covid$resids, na.rm = TRUE))
covid$resids_gp <- cut(covid$resids, brks, include.lowest = TRUE)
pal <- c("purple", "dark blue", "light blue", "light grey", "yellow", "orange", "red")
ggplot(covid, aes(fill = resids_gp)) +
geom_sf(size = 0.25) +
scale_fill_manual("Standardised residual", values = pal, na.value = "white",
na.translate = F) +
theme_void() +
guides(fill = guide_legend(reverse = TRUE))
ols3 <- update(ols2, . ~ . + poly(density, 2))
summary(ols3)
require(broom)
bind_rows(glance(ols1), glance(ols2), glance(ols3))
anova(ols2, ols3)
lm.morantest(ols2, spweight)$estimate
lm.morantest(ols3, spweight)$estimate
covid$resids <- rstandard(ols3)
brks <- c(min(covid$resids, na.rm = TRUE), -3.29, -2.58, -1.96, 1.96, 2.58, 3.29,
max(covid$resids, na.rm = TRUE))
covid$resids_gp <- cut(covid$resids, brks, include.lowest = TRUE)
pal <- c("purple", "dark blue", "light blue", "light grey", "yellow", "orange", "red")
ggplot(covid, aes(fill = resids_gp)) +
geom_sf(size = 0.25) +
scale_fill_manual("Standardised residual", values = pal, na.value = "white",
na.translate = F) +
theme_void() +
guides(fill = guide_legend(reverse = TRUE))
if(!("spatialreg" %in% installed.packages()[,1])) install.packages("spatialreg", dependencies = TRUE)
require(spatialreg)
errmod <- errorsarlm(formula(ols3), data = covid, listw = spweight)
summary(errmod)
glance(ols3)$r.squared
glance(errmod)$r.squared
AIC(ols3)
AIC(errmod)
logLik(ols3)
logLik(errmod)
degf <- attr(logLik(errmod), "df") - attr(logLik(ols3), "df")
LR <- -2 * (logLik(ols3) - logLik(errmod))
LR > qchisq(0.99, degf)
tidy(ols3)
tidy(errmod)
confint(ols3)
confint(errmod)
lagmod <- lagsarlm(formula(ols3), data = covid, listw = spweight)
summary(lagmod)
impacts(lagmod, listw = spweight)
W <- as(spweight, "CsparseMatrix")
trMC <- trW(W, type="MC")
im <-summary(impacts(lagmod, tr = trMC, R = 1000), zstats = TRUE)
data.frame(im$res, row.names = names(lagmod$coefficients)[-1])   # The [-1] is to omit the intercept
data.frame(im$zmat, row.names = names(lagmod$coefficients)[-1])
data.frame(im$pzmat, row.names = names(lagmod$coefficients)[-1])
lagmod2 <- lagsarlm(Rate ~  IMD + age0.11 + age25.34 + age50.59 + carebeds +
poly(density, 2), data = covid, listw = spweight)
anova(lagmod, lagmod2)
bind_rows(glance(lagmod), glance(lagmod2))
n <- nrow(covid)
I <- matrix(0, nrow = n, ncol = n)
diag(I) <- 1
rho <- lagmod$rho
beta <- lagmod$coefficients["age25.34"]
weights.matrix <- listw2mat(spweight)
results <- rep(NA, times=10)
results <- sapply(1:10, \(i) {
xvector <- rep(0, times=n)
xvector[i] <- 1
impact <- solve(I - rho * weights.matrix) %*% xvector * beta
results[i] <- impact[i]
})
results
ols4 <- lm(Rate ~  IMD + age0.11 + age25.34 + age50.59 + carebeds + poly(density, 2), data = covid)
lm.LMtests(ols4, spweight, test=c("LMerr", "LMlag"))
lm.LMtests(ols4, spweight, test=c("RLMerr", "RLMlag"))
#| results: false
require(GWmodel)
bw <- bw.gwr(Rate ~ 1, data = covid_sp, adaptive = TRUE, kernel = "bisquare")
if(!("RANN" %in% installed.packages()[,1]))  install.packages("RANN")
require(RANN)
coords <- st_coordinates(st_centroid(st_geometry(covid)))
knn <- nn2(coords, coords, k = bw)
d <- knn$nn.dists
glist <- apply(d, 1, \(x) {
(1 - (x / max(x))^2)^2
}, simplify = FALSE)
knearnb <- knn2nb(knearneigh(st_centroid(st_geometry(covid)), k = bw))
spweightK <- nb2listw(knearnb, glist, style = "C")
lagmod3 <- lagsarlm(formula(ols4), data = covid, listw = spweightK)
bind_rows(glance(lagmod2), glance(lagmod3))
#| results: false
require(GWmodel)
bw <- bw.gwr(formula(ols4), data = covid_sp, adaptive = TRUE)
gwrmod <- gwr.basic(formula(ols4), data = covid_sp, adaptive = TRUE, bw = bw)
gwrmod
summary(gwrmod$SDF$age0.11)
covid$age0.11GWR <- gwrmod$SDF$age0.11
ggplot(data = covid, aes(fill = age0.11GWR)) +
geom_sf(size = 0.25) +
scale_fill_gradient2("beta", mid = "grey90", trans = "reverse") +
theme_void() +
guides(fill = guide_colourbar(reverse = TRUE))
if(!("gridExtra" %in% installed.packages()[,1])) install.packages("gridExtra", dependencies = TRUE)
require(gridExtra)
g <- lapply(2:8, \(j) {
st_as_sf(gwrmod$SDF[, j]) %>%
rename(beta = 1) %>%
ggplot(aes(fill = beta)) +
geom_sf(col = NA) +
scale_fill_gradient2("beta", mid = "grey90", trans = "reverse") +
theme_void() +
guides(fill = guide_colourbar(reverse = TRUE)) +
ggtitle(names(gwrmod$SDF[j]))
})
grid.arrange(grobs = g)
covid$age0.11GWR[abs(gwrmod$SDF$age0.11_TV) > 1.96] <- NA
ggplot(data = covid, aes(fill = age0.11GWR)) +
geom_sf(size = 0.25) +
scale_fill_gradient2("beta", mid = "grey90", na.value = "white", trans = "reverse") +
theme_void() +
guides(fill = guide_colourbar(reverse = TRUE))
sdf <- slot(gwrmod$SDF, "data")
g <- lapply(2:8, \(j) {
x <- st_as_sf(gwrmod$SDF[, j])
t <- which(names(sdf) == paste0(names(x)[1],"_TV"))
x[abs(sdf[, t]) > 1.96, 1] <- NA
x %>%
rename(beta = 1) %>%
ggplot(aes(fill = beta)) +
geom_sf(col = NA) +
scale_fill_gradient2("beta", mid = "grey90", na.value = "white", trans = "reverse") +
theme_void() +
guides(fill = guide_colourbar(reverse = TRUE)) +
ggtitle(names(gwrmod$SDF[j]))
})
grid.arrange(grobs = g)
# I suggest you do not run this
# gwr.mc <- gwr.montecarlo(formula(ols4), covid_sp, adaptive = TRUE, bw = bw)
url <- url("https://github.com/profrichharris/profrichharris.github.io/raw/main/MandM/workspaces/gwrmc.RData")
load(url)
close(url)
gwr.mc
#| results: false
density.1 <- poly(covid$density, 2)[, 1]
density.2 <- poly(covid$density, 2)[, 2]
covid_sp$RateR <- residuals(lm(Rate ~ IMD + age25.34 + age50.59 + carebeds, data = covid_sp))
covid_sp$age0.11R <- residuals(lm(age0.11 ~ IMD + age25.34 + age50.59 + carebeds, data = covid_sp))
covid_sp$density.1R <- residuals(lm(density.1 ~ IMD + age25.34 + age50.59 + carebeds, data = covid_sp))
covid_sp$density.2R <- residuals(lm(density.2 ~ IMD + age25.34 + age50.59 + carebeds, data = covid_sp))
fml <- formula(RateR ~ age0.11R + density.1R + density.2R)
bw <- bw.gwr(fml, data = covid_sp, adaptive = TRUE)
gwrmixd <- gwr.basic(fml, data = covid_sp, bw = bw, adaptive = TRUE)
covid$age0.11GWR <- gwrmixd$SDF$age0.11R
covid$age0.11GWR[abs(gwrmixd$SDF$age0.11R_TV) > 1.96] <- NA
ggplot(data = covid, aes(fill = age0.11GWR)) +
geom_sf(size = 0.25) +
scale_fill_gradient2("beta", mid = "grey90", na.value = "white", trans = "reverse") +
theme_void() +
guides(fill = guide_colourbar(reverse = TRUE))
t1 <- Sys.time()
t2 <- Sys.time()
t2 - t1
setwd("C:/Users/profr/Dropbox/github/MandM/workspaces")
t1 <- Sys.time()
gwrmulti <- gwr.multiscale(Rate ~ IMD + age0.11 + age25.34 + age50.59 + carebeds +
density.1 + density.2, data = covid_sp, adaptive = TRUE)
t2 <- Sys.time()
setwd("C:/Users/profr/Dropbox/github/MandM/workspaces")
save(gwrmulti, file = "gwrmulti.RData")
t2 - t1
ls()
gwrmulti
rm(list=ls())
url <- url("https://github.com/profrichharris/profrichharris.github.io/raw/main/MandM/workspaces/gwrmulti.RData")
load(url)
close(url)
gwrmulti#
url <- url("https://github.com/profrichharris/profrichharris.github.io/raw/main/MandM/workspaces/gwrmulti.RData")
load(url)
close(url)
gwrmulti
url <- url("https://github.com/profrichharris/profrichharris.github.io/raw/main/MandM/workspaces/gwrmulti.RData")
load(url)
close(url)
gwrmulti
url <- url("https://github.com/profrichharris/profrichharris.github.io/raw/main/MandM/workspaces/gwrmulti.RData")
load(url)
close(url)
gwrmulti
rm(list=ls())
url <- url("https://github.com/profrichharris/profrichharris.github.io/raw/main/MandM/workspaces/manchester.RData")
load(url)
close(url)
url <- url("https://github.com/profrichharris/profrichharris.github.io/raw/main/MandM/workspaces/gwrmulti.RData")
load(url)
close(url)
gwrmulti
url <- url("https://github.com/profrichharris/profrichharris.github.io/raw/main/MandM/workspaces/gwrmulti.RData")
load(url)
close(url)
gwrmulti
rm(list=ls())
load("C:/Users/profr/Dropbox/github/MandM/workspaces/gwrmulti.RData")
ls()
gwrmulti
url <- url("https://github.com/profrichharris/profrichharris.github.io/raw/main/MandM/workspaces/manchester.RData")
load(url)
close(url)
gwrmulti
